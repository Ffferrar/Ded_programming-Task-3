#define MAX_SIZE 10
#define RISE_V_STACK 10
#define POISON 1984
#define HASH_CONST 7

struct Stack        //Стэк собственной персоной
{
    long long int canary1 = 0;
    long long int* canary2 = nullptr;
    int capacity = 0;      //TODO заменить size capacity на sizet
    int ssize = 0;         //TODO сделать 
    int *data = nullptr;
    long long int hash_ = 0; //TODO две канарейки
};

//основные функции для стэка

void StackCtr (Stack* sstack);

void StackPush(Stack *sstack, int value);

int StackPop(Stack *sstack);

void StackDtor(Stack* sstack);

void StackResize(Stack *sstack);

//защита стэка

enum ERRORS_NAMES
{
    NULL_STACK_POINTER = 1,
    STACK_UNDERFLOW,
    NEGATIVE_CAPACITY,
    STACK_OVERFLOW,
    NULL_DATA_POINTER,     //вручную пронумеровать
    NULL_CANARI_POINTER,
    CANARY1_DAMAGE,
    CANARY2_DAMAGE,
    HASH_DAMAGE
};

int StackOK (Stack *sstack);
void StackDump (Stack *sstack);
void ErrorPrint(int ERROR);
void StackPrint(Stack *sstack);

void FullofPoison (Stack* sstack, int start, int ennd);

long long int StackHash (Stack *sstack);


//для V1 of CPU

int command_compare(char *data1, int length1, char *data2, int length2);

int inf_proc (Stack *S, char user_ch);

void CPU (int COMMAND_NUM, int user_number, Stack *S);

void User_Work(Stack *S);
